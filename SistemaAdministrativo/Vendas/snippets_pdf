Crie o arquivo “rails_admin_pdf.rb” no seguinte path “/lib/rails_admin” e coloque este conteúdo:

module RailsAdminPdf
end

require 'rails_admin/config/actions'
require 'prawn'
require 'gruff'

module RailsAdmin
  module Config
    module Actions
      class Pdf < Base RailsAdmin::Config::Actions.register(self) register_instance_option :member do true end register_instance_option :pjax? do false end register_instance_option :controller do Proc.new do # Configurando PDF PDF_OPTIONS = { :page_size => "A4",
              :page_layout => :portrait,
              :margin      => [40, 75]
            }

            # Configurando Retorno
            ramdom_file_name = (0...8).map { (65 + rand(26)).chr }.join

            Prawn::Document.new(PDF_OPTIONS) do |pdf|
              pdf.fill_color "666666"
              pdf.text "Relatório do Representante", :size => 32, :style => :bold, :align => :center
              pdf.move_down 80

              pdf.text "Dados Pessoais", :size => 14, :align => :justify, :inline_format => true, :style => :bold
              pdf.move_down 14

              if @object.name
                pdf.text "Nome: #{@object.name}", :size => 12, :align => :justify, :inline_format => true
                pdf.move_down 8
              end

              if @object.document
                pdf.text "Documento: #{@object.document}", :size => 12, :align => :justify, :inline_format => true
                pdf.move_down 8
              end

              if @object.kind
                pdf.text "Tipo: #{@object.kind}", :size => 12, :align => :justify, :inline_format => true
                pdf.move_down 8
              end

              if @object.status
                pdf.text "Status: #{@object.status}", :size => 12, :align => :justify, :inline_format => true
                pdf.move_down 8
              end

              if @object.email
                pdf.text "Email: #{@object.email}", :size => 12, :align => :justify, :inline_format => true
                pdf.move_down 8
              end

              pdf.move_down 20

              if @object.comissions.where(status: :pending).count > 0

                pdf.text "Comissões Pendentes", :size => 14, :align => :justify, :inline_format => true, :style => :bold
                pdf.move_down 14

                total = 0

                @object.comissions.where(status: :pending).each do |c|
                  pdf.text "Id #{c.id}, valor R$#{c.value}, gerada em #{c.created_at.strftime("%d/%m/%y as %H:%M")}",
                    :size => 12, :align => :justify, :inline_format => true
                  pdf.move_down 8

                  total += c.value
                end

                pdf.move_down 10
                pdf.text "Total: R$#{total}", :size => 12, :align => :justify, :inline_format => true
                pdf.move_down 20
              end


              if @object.clients.count > 0

                pdf.text "Clientes Ativos", :size => 14, :align => :justify, :inline_format => true, :style => :bold
                pdf.move_down 14

                total = 0

                @object.clients.each do |c|
                  pdf.text "#{c.name}",
                    :size = 12, :align = :justify, :inline_format = true, :style = :bold
                  pdf.move_down 8

                  pdf.text "Da empresa: #{c.company_name}",
                    :size = 12, :align = :justify, :inline_format = true
                  pdf.move_down 8

                  pdf.text "Cliente desde #{c.created_at.strftime("%d/%m/%y as %H:%M")}",
                    :size = 12, :align = :justify, :inline_format = true
                  pdf.move_down 8

                  total += 1
                end

                pdf.move_down 10
                pdf.text "Total: #{total}", :size = 12, :align = :justify, :inline_format = true
                pdf.move_down 20
              end


              if @object.sales.count  0
                # Cria o objeto Gruff
                g = Gruff::Pie.new 900
                g.theme = Gruff::Themes::PASTEL

                # Aqui ele formata nossos dados
                sales_values = {}
                @object.sales.each do |sale|
                  calc = 0
                  sale.product_quantities.each {|p| calc += p.product.price * p.quantity}
                  sales_values[sale.client.name] = (sales_values[sale.client.name])? sales_values[sale.client.name] + calc : calc
                end

                sales_values.each {|key, value| g.data(key, value)}

                # Gera a imagem no diretório público (você pode escolher onde gerar)
                g.write('public/graph.jpg')

                pdf.start_new_page

                pdf.text "Gráfico de Vendas", :size = 20, :style = :bold, :align = :center

                # Incluir o gráfico numero 2
                pdf.image "public/graph.jpg", :scale = 0.50
              end


              # Muda de font para Helvetica
              pdf.font "Helvetica"
              # Inclui um texto com um link clicável (usando a tag link) no bottom da folha do lado esquerdo e coloca uma cor especifica nessa parte (usando a tag color)
              pdf.text "Link Para o Manul do Prawn clicável", :size = 10, :inline_format = true, :valign = :bottom, :align = :left
              # Inclui em baixo da folha do lado direito a data e o némero da página usando a tag page
              pdf.number_pages "Gerado: #{(Time.now).strftime("%d/%m/%y as %H:%M")} - Página ", :start_count_at = 0, :page_filter = :all, :at = [pdf.bounds.right - 140, 7], :align = :right, :size = 8
              # Gera no nosso PDF e coloca na pasta public com o nome agreement.pdf
              pdf.render_file("public/#{ramdom_file_name}.pdf")
            end

            File.open("public/#{ramdom_file_name}.pdf", 'r') do |f|
              send_data f.read.force_encoding('BINARY'), :filename = 'pdf', :type = "application/pdf", :disposition = "attachment"
            end
            File.delete("public/#{ramdom_file_name}.pdf")
            File.delete("public/graph.jpg") if @object.sales.count  0
          end
        end

        register_instance_option :link_icon do
          'fa fa-file-pdf-o'
        end
      end
    end
  end
end
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
module RailsAdminPdf
end
 
require 'rails_admin/config/actions'
require 'prawn'
require 'gruff'
 
module RailsAdmin
  module Config
    module Actions
      class Pdf < Base RailsAdmin::Config::Actions.register(self) register_instance_option :member do true end register_instance_option :pjax? do false end register_instance_option :controller do Proc.new do # Configurando PDF PDF_OPTIONS = { :page_size => "A4",
              :page_layout => :portrait,
              :margin      => [40, 75]
            }
 
            # Configurando Retorno
            ramdom_file_name = (0...8).map { (65 + rand(26)).chr }.join
 
            Prawn::Document.new(PDF_OPTIONS) do |pdf|
              pdf.fill_color "666666"
              pdf.text "Relatório do Representante", :size => 32, :style => :bold, :align => :center
              pdf.move_down 80
 
              pdf.text "Dados Pessoais", :size => 14, :align => :justify, :inline_format => true, :style => :bold
              pdf.move_down 14
 
              if @object.name
                pdf.text "Nome: #{@object.name}", :size => 12, :align => :justify, :inline_format => true
                pdf.move_down 8
              end
 
              if @object.document
                pdf.text "Documento: #{@object.document}", :size => 12, :align => :justify, :inline_format => true
                pdf.move_down 8
              end
 
              if @object.kind
                pdf.text "Tipo: #{@object.kind}", :size => 12, :align => :justify, :inline_format => true
                pdf.move_down 8
              end
 
              if @object.status
                pdf.text "Status: #{@object.status}", :size => 12, :align => :justify, :inline_format => true
                pdf.move_down 8
              end
 
              if @object.email
                pdf.text "Email: #{@object.email}", :size => 12, :align => :justify, :inline_format => true
                pdf.move_down 8
              end
 
              pdf.move_down 20
 
              if @object.comissions.where(status: :pending).count > 0
 
                pdf.text "Comissões Pendentes", :size => 14, :align => :justify, :inline_format => true, :style => :bold
                pdf.move_down 14
 
                total = 0
 
                @object.comissions.where(status: :pending).each do |c|
                  pdf.text "Id #{c.id}, valor R$#{c.value}, gerada em #{c.created_at.strftime("%d/%m/%y as %H:%M")}",
                    :size => 12, :align => :justify, :inline_format => true
                  pdf.move_down 8
 
                  total += c.value
                end
 
                pdf.move_down 10
                pdf.text "Total: R$#{total}", :size => 12, :align => :justify, :inline_format => true
                pdf.move_down 20
              end
 
 
              if @object.clients.count > 0
 
                pdf.text "Clientes Ativos", :size => 14, :align => :justify, :inline_format => true, :style => :bold
                pdf.move_down 14
 
                total = 0
 
                @object.clients.each do |c|
                  pdf.text "#{c.name}",
                    :size = 12, :align = :justify, :inline_format = true, :style = :bold
                  pdf.move_down 8
 
                  pdf.text "Da empresa: #{c.company_name}",
                    :size = 12, :align = :justify, :inline_format = true
                  pdf.move_down 8
 
                  pdf.text "Cliente desde #{c.created_at.strftime("%d/%m/%y as %H:%M")}",
                    :size = 12, :align = :justify, :inline_format = true
                  pdf.move_down 8
 
                  total += 1
                end
 
                pdf.move_down 10
                pdf.text "Total: #{total}", :size = 12, :align = :justify, :inline_format = true
                pdf.move_down 20
              end
 
 
              if @object.sales.count  0
                # Cria o objeto Gruff
                g = Gruff::Pie.new 900
                g.theme = Gruff::Themes::PASTEL
 
                # Aqui ele formata nossos dados
                sales_values = {}
                @object.sales.each do |sale|
                  calc = 0
                  sale.product_quantities.each {|p| calc += p.product.price * p.quantity}
                  sales_values[sale.client.name] = (sales_values[sale.client.name])? sales_values[sale.client.name] + calc : calc
                end
 
                sales_values.each {|key, value| g.data(key, value)}
 
                # Gera a imagem no diretório público (você pode escolher onde gerar)
                g.write('public/graph.jpg')
 
                pdf.start_new_page
 
                pdf.text "Gráfico de Vendas", :size = 20, :style = :bold, :align = :center
 
                # Incluir o gráfico numero 2
                pdf.image "public/graph.jpg", :scale = 0.50
              end
 
 
              # Muda de font para Helvetica
              pdf.font "Helvetica"
              # Inclui um texto com um link clicável (usando a tag link) no bottom da folha do lado esquerdo e coloca uma cor especifica nessa parte (usando a tag color)
              pdf.text "Link Para o Manul do Prawn clicável", :size = 10, :inline_format = true, :valign = :bottom, :align = :left
              # Inclui em baixo da folha do lado direito a data e o némero da página usando a tag page
              pdf.number_pages "Gerado: #{(Time.now).strftime("%d/%m/%y as %H:%M")} - Página ", :start_count_at = 0, :page_filter = :all, :at = [pdf.bounds.right - 140, 7], :align = :right, :size = 8
              # Gera no nosso PDF e coloca na pasta public com o nome agreement.pdf
              pdf.render_file("public/#{ramdom_file_name}.pdf")
            end
 
            File.open("public/#{ramdom_file_name}.pdf", 'r') do |f|
              send_data f.read.force_encoding('BINARY'), :filename = 'pdf', :type = "application/pdf", :disposition = "attachment"
            end
            File.delete("public/#{ramdom_file_name}.pdf")
            File.delete("public/graph.jpg") if @object.sales.count  0
          end
        end
 
        register_instance_option :link_icon do
          'fa fa-file-pdf-o'
        end
      end
    end
  end
end
Agora no seu Gemfile adicione:

# Gem para gerar os pdfs
gem 'prawn-rails'
# Gem para gerar os gráficos
gem 'gruff'
1
2
3
4
# Gem para gerar os pdfs
gem 'prawn-rails'
# Gem para gerar os gráficos
gem 'gruff'
Para instalar as dependencias da Gem Gruff caso você esteja no Ubuntu rode no console:

sudo apt-get install imagemagick libmagickcore-dev libmagickwand-dev
1
sudo apt-get install imagemagick libmagickcore-dev libmagickwand-dev
Caso você esteja no Mac, rode:

brew install imagemagick
1
brew install imagemagick
Para instalar as Gems, rode no console:

bundle
1
bundle
Agora coloque no seu arquivo de configuração do Rails Admin “/config/initializers/rails_admin.rb” o seguinte conteúdo:

RailsAdmin.config do |config|

  require Rails.root.join('lib', 'rails_admin', 'rails_admin_pdf.rb')
  RailsAdmin::Config::Actions.register(RailsAdmin::Config::Actions::Pdf)

  ### Popular gems integration

  ## == Devise ==
  config.authenticate_with do
    warden.authenticate! scope: :user
  end
  config.current_user_method(&&current_user)

  ## == Cancan ==
  config.authorize_with :cancan

  ## == Pundit ==
  # config.authorize_with :pundit

  ## == PaperTrail ==
  # config.audit_with :paper_trail, 'User', 'PaperTrail::Version' # PaperTrail = 3.0.0

  ### More at https://github.com/sferik/rails_admin/wiki/Base-configuration

  ## == Gravatar integration ==
  ## To disable Gravatar integration in Navigation Bar set to false
  # config.show_gravatar true

  config.navigation_static_links = {
    'OneBitCode' = 'http://onebitcode.com'
  }
  config.navigation_static_label = "Lins Úteis"

  config.main_app_name = ["Representantes Comerciais", ""]

  config.model Sale do
    navigation_icon 'fa fa-money'
    create do
      field  :client
      field  :sale_date
      field  :discount
      field  :notes
      field  :product_quantities

      field :user_id, :hidden do
        default_value do
          bindings[:view]._current_user.id
        end
      end
    end

    edit do
      field  :client
      field  :sale_date
      field  :discount
      field  :notes
      field  :product_quantities

      field :user_id, :hidden do
        default_value do
          bindings[:view]._current_user.id
        end
      end
    end
  end

  config.model Client do
    create do
      field  :name
      field  :company_name
      field  :document
      field  :email
      field  :phone
      field  :notes
      field  :status
      field  :address

      field :user_id, :hidden do
        default_value do
          bindings[:view]._current_user.id
        end
      end
    end

    edit do
      field  :name
      field  :company_name
      field  :document
      field  :email
      field  :phone
      field  :notes
      field  :status
      field  :address


      field :user_id, :hidden do
        default_value do
          bindings[:view]._current_user.id
        end
      end
    end

    list do
      field  :name
      field  :company_name
      field  :document
      field  :email
      field  :phone
      field  :notes
      field  :status
      field  :address

    end
  end


  config.model Discount do
    parent Product
  end

  config.model Sale do
    parent User
    weight -2
  end

  config.model Comission do
    parent User
    weight -1
  end

  config.model Client do
    parent User
  end

  config.model ProductQuantity do
    visible false
  end

  config.model Address do
    visible false
  end


  config.model ProductQuantity do
    edit do
      field :product
      field :quantity

      field :user_id, :hidden do
        default_value do
          bindings[:view]._current_user.id
        end
      end
    end
  end


  config.actions do
    dashboard                     # mandatory
    index                         # mandatory
    new
    export
    bulk_delete
    show
    edit
    delete
    show_in_app
    pdf do
      only User
    end

    ## With an audit adapter, you can add:
    # history_index
    # history_show
  end
end
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
RailsAdmin.config do |config|
 
  require Rails.root.join('lib', 'rails_admin', 'rails_admin_pdf.rb')
  RailsAdmin::Config::Actions.register(RailsAdmin::Config::Actions::Pdf)
 
  ### Popular gems integration
 
  ## == Devise ==
  config.authenticate_with do
    warden.authenticate! scope: :user
  end
  config.current_user_method(&&current_user)
 
  ## == Cancan ==
  config.authorize_with :cancan
 
  ## == Pundit ==
  # config.authorize_with :pundit
 
  ## == PaperTrail ==
  # config.audit_with :paper_trail, 'User', 'PaperTrail::Version' # PaperTrail = 3.0.0
 
  ### More at https://github.com/sferik/rails_admin/wiki/Base-configuration
 
  ## == Gravatar integration ==
  ## To disable Gravatar integration in Navigation Bar set to false
  # config.show_gravatar true
 
  config.navigation_static_links = {
    'OneBitCode' = 'http://onebitcode.com'
  }
  config.navigation_static_label = "Lins Úteis"
 
  config.main_app_name = ["Representantes Comerciais", ""]
 
  config.model Sale do
    navigation_icon 'fa fa-money'
    create do
      field  :client
      field  :sale_date
      field  :discount
      field  :notes
      field  :product_quantities
 
      field :user_id, :hidden do
        default_value do
          bindings[:view]._current_user.id
        end
      end
    end
 
    edit do
      field  :client
      field  :sale_date
      field  :discount
      field  :notes
      field  :product_quantities
 
      field :user_id, :hidden do
        default_value do
          bindings[:view]._current_user.id
        end
      end
    end
  end
 
  config.model Client do
    create do
      field  :name
      field  :company_name
      field  :document
      field  :email
      field  :phone
      field  :notes
      field  :status
      field  :address
 
      field :user_id, :hidden do
        default_value do
          bindings[:view]._current_user.id
        end
      end
    end
 
    edit do
      field  :name
      field  :company_name
      field  :document
      field  :email
      field  :phone
      field  :notes
      field  :status
      field  :address
 
 
      field :user_id, :hidden do
        default_value do
          bindings[:view]._current_user.id
        end
      end
    end
 
    list do
      field  :name
      field  :company_name
      field  :document
      field  :email
      field  :phone
      field  :notes
      field  :status
      field  :address
 
    end
  end
 
 
  config.model Discount do
    parent Product
  end
 
  config.model Sale do
    parent User
    weight -2
  end
 
  config.model Comission do
    parent User
    weight -1
  end
 
  config.model Client do
    parent User
  end
 
  config.model ProductQuantity do
    visible false
  end
 
  config.model Address do
    visible false
  end
 
 
  config.model ProductQuantity do
    edit do
      field :product
      field :quantity
 
      field :user_id, :hidden do
        default_value do
          bindings[:view]._current_user.id
        end
      end
    end
  end
 
 
  config.actions do
    dashboard                     # mandatory
    index                         # mandatory
    new
    export
    bulk_delete
    show
    edit
    delete
    show_in_app
    pdf do
      only User
    end
 
    ## With an audit adapter, you can add:
    # history_index
    # history_show
  end
end
Pronto \o/
